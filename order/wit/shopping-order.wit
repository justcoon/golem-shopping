package golem:it;

interface api {

  record order-item {
    product-id: string,
    name: string,
    price: float32,
    quantity: u32,
  }

  record order {
    order-id: string,
    user-id: string,
    items: list<order-item>,
    total: float32,
    currency: string,
    timestamp: u64,
  }

  record create-order {
    user-id: string,
    items: list<order-item>,
    total: float32,
    currency: string,
    timestamp: u64,
  }

  initialize-order: func(data: create-order) -> ();

  add-item: func(product-id: string, quantity: u32) -> result<_, string>;

  remove-item: func(product-id: string) -> result<_, string>;

  update-item-quantity: func(product-id: string, quantity: u32) -> result<_, string>;

  get: func() -> option<order>;
}

world shopping-order {
  import golem:api/host@0.2.0;

  export api;
}