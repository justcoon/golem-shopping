package golem:it;

interface api {

  record cart-item {
    product-id: string,
    name: string,
    price: float32,
    quantity: u32,
  }

  record cart {
    user-id: string,
    items: list<cart-item>,
    total: float32,
    currency: string,
    timestamp: u64,
  }

  record order-confirmation {
    order-id: string,
  }

  variant checkout-result {
    error(string),
    success(order-confirmation),
  }

  add-item: func(product-id: string, quantity: u32) -> result<_, string>;

  remove-item: func(product-id: string) -> result<_, string>;

  update-item-quantity: func(product-id: string, quantity: u32) -> result<_, string>;

  checkout: func() -> checkout-result;

  get: func() -> option<cart>;
}

world shopping-cart {
  import golem:api/host@0.2.0;

  export api;
}